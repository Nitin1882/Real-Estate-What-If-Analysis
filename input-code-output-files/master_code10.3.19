{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# What-if analysis of real estate data from New Jersey"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Import Dependencies\n",
    "import pandas as pd\n",
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "from scipy.stats import linregress"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Read school, crime, real estate, transit and population data of NJ and store in dataframe\n",
    "school_data = pd.read_csv (\"school_data.csv\")\n",
    "population = pd.read_csv('nj-population-data.csv', thousands=',')\n",
    "resident_df = pd.read_csv(\"real_estate_11.csv\")\n",
    "crime = pd.read_csv('2018_NJ_Crime_Data.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Cleaning dataframes\n",
    "\n",
    "#School data: Delete rows without county name(zip is 99999)by fetching their indexes from dataFrame\n",
    "indexes = school_data[ school_data['zip'] == 99999 ].index\n",
    "school_data.drop(indexes , inplace=True)\n",
    "\n",
    "#Crime data:Drop null values\n",
    "crime=crime.dropna()\n",
    "\n",
    "#Real estate data: Correcting names of counties\n",
    "resident_df=resident_df.replace(\"Monmoth\", \"Monmouth\")\n",
    "resident_df=resident_df.replace(\"Passic\", \"Passaic\")\n",
    "county=resident_df[\"County\"].unique()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Analysis of school data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>County</th>\n",
       "      <th>5 Stars</th>\n",
       "      <th>4 Stars</th>\n",
       "      <th>3 Stars</th>\n",
       "      <th>Mean of Score (5*)</th>\n",
       "      <th>Mean of Score (4*)</th>\n",
       "      <th>Mean of Score (3*)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Atlantic</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>78.796723</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Bergen</td>\n",
       "      <td>36</td>\n",
       "      <td>58</td>\n",
       "      <td>24</td>\n",
       "      <td>92.108301</td>\n",
       "      <td>80.485967</td>\n",
       "      <td>66.481758</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Burlington</td>\n",
       "      <td>2</td>\n",
       "      <td>13</td>\n",
       "      <td>6</td>\n",
       "      <td>92.191000</td>\n",
       "      <td>78.922172</td>\n",
       "      <td>64.366455</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Camden</td>\n",
       "      <td>5</td>\n",
       "      <td>16</td>\n",
       "      <td>14</td>\n",
       "      <td>91.902830</td>\n",
       "      <td>78.059004</td>\n",
       "      <td>63.192429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Cape May</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>78.062050</td>\n",
       "      <td>65.185955</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       County  5 Stars  4 Stars  3 Stars  Mean of Score (5*)  \\\n",
       "0    Atlantic        0        3        0            0.000000   \n",
       "1      Bergen       36       58       24           92.108301   \n",
       "2  Burlington        2       13        6           92.191000   \n",
       "3      Camden        5       16       14           91.902830   \n",
       "4    Cape May        0        2        2            0.000000   \n",
       "\n",
       "   Mean of Score (4*)  Mean of Score (3*)  \n",
       "0           78.796723            0.000000  \n",
       "1           80.485967           66.481758  \n",
       "2           78.922172           64.366455  \n",
       "3           78.059004           63.192429  \n",
       "4           78.062050           65.185955  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Calculate number of schools with rank 5*, 4* and 3* in each county \n",
    "rank_5=school_data.loc[school_data['rank_star']==5].groupby(\"county\",as_index=True, group_keys=True)['school_id'].count()\n",
    "rank_4=school_data.loc[school_data['rank_star']==4].groupby(\"county\",as_index=True, group_keys=True)['school_id'].count()\n",
    "rank_3=school_data.loc[school_data['rank_star']==3].groupby(\"county\",as_index=True, group_keys=True)['school_id'].count()\n",
    "#rank_5.head(20)\n",
    "\n",
    "#Calculate mean of average standard score per school based on their rank\n",
    "mean_avg_std_score_5=school_data.loc[school_data['rank_star']==5].groupby(\"county\")[\"avg_std_score\"].mean()\n",
    "mean_avg_std_score_4=school_data.loc[school_data['rank_star']==4].groupby(\"county\")[\"avg_std_score\"].mean()\n",
    "mean_avg_std_score_3=school_data.loc[school_data['rank_star']==3].groupby(\"county\")[\"avg_std_score\"].mean()\n",
    "\n",
    "county_school = school_data.sort_values(\"county\")\n",
    "unique_county=county_school[\"county\"].unique()\n",
    "unique_county\n",
    "\n",
    "#Create dataframe to hold the above results\n",
    "rankwise_school_per_county = {'County':unique_county,\n",
    "                 '5 Stars': rank_5,\n",
    "                 '4 Stars': rank_4,\n",
    "                 '3 Stars': rank_3,\n",
    "                  'Mean of Score (5*)':mean_avg_std_score_5,\n",
    "                  'Mean of Score (4*)':mean_avg_std_score_4, \n",
    "                  'Mean of Score (3*)':mean_avg_std_score_3,\n",
    "}\n",
    "rankwise_school_per_county = pd.DataFrame(rankwise_school_per_county )\n",
    "\n",
    "#Dataframe will have null values for missing datapoints which converts the dtypes of the columns to float\n",
    "#Replace null values with 0\n",
    "rankwise_school_per_county=rankwise_school_per_county.fillna(0)\n",
    "\n",
    "#Converting data columns from float back to int \n",
    "rankwise_school_per_county['5 Stars'] = rankwise_school_per_county['5 Stars'].astype(int)\n",
    "rankwise_school_per_county['3 Stars'] = rankwise_school_per_county['3 Stars'].astype(int)\n",
    "\n",
    "#Display dataframe\n",
    "rankwise_school_per_county=rankwise_school_per_county.reset_index(drop=True)\n",
    "rankwise_school_per_county.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>County</th>\n",
       "      <th>5 Stars</th>\n",
       "      <th>4 Stars</th>\n",
       "      <th>3 Stars</th>\n",
       "      <th>Mean of Score (5*)</th>\n",
       "      <th>Mean of Score (4*)</th>\n",
       "      <th>Mean of Score (3*)</th>\n",
       "      <th>Average Mean Score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Atlantic</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>78.796723</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>26.265574</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Bergen</td>\n",
       "      <td>36</td>\n",
       "      <td>58</td>\n",
       "      <td>24</td>\n",
       "      <td>92.108301</td>\n",
       "      <td>80.485967</td>\n",
       "      <td>66.481758</td>\n",
       "      <td>79.692009</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Burlington</td>\n",
       "      <td>2</td>\n",
       "      <td>13</td>\n",
       "      <td>6</td>\n",
       "      <td>92.191000</td>\n",
       "      <td>78.922172</td>\n",
       "      <td>64.366455</td>\n",
       "      <td>78.493209</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Camden</td>\n",
       "      <td>5</td>\n",
       "      <td>16</td>\n",
       "      <td>14</td>\n",
       "      <td>91.902830</td>\n",
       "      <td>78.059004</td>\n",
       "      <td>63.192429</td>\n",
       "      <td>77.718088</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Cape May</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>78.062050</td>\n",
       "      <td>65.185955</td>\n",
       "      <td>47.749335</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       County  5 Stars  4 Stars  3 Stars  Mean of Score (5*)  \\\n",
       "0    Atlantic        0        3        0            0.000000   \n",
       "1      Bergen       36       58       24           92.108301   \n",
       "2  Burlington        2       13        6           92.191000   \n",
       "3      Camden        5       16       14           91.902830   \n",
       "4    Cape May        0        2        2            0.000000   \n",
       "\n",
       "   Mean of Score (4*)  Mean of Score (3*)  Average Mean Score  \n",
       "0           78.796723            0.000000           26.265574  \n",
       "1           80.485967           66.481758           79.692009  \n",
       "2           78.922172           64.366455           78.493209  \n",
       "3           78.059004           63.192429           77.718088  \n",
       "4           78.062050           65.185955           47.749335  "
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Calculate Average of Mean Scores per county and add to dataframe\n",
    "rankwise_school_per_county['Average Mean Score'] = rankwise_school_per_county.iloc[:,4:7].mean(axis=1)\n",
    "rankwise_school_per_county.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Create stacked bar plot showing number of 3*,4* and 5* schools per county\n",
    "school_data.groupby('county').rank_star.value_counts().unstack().plot(kind='bar',stacked=True)\n",
    "plt.title('Number Of Schools With Rank Star Per County In NJ')\n",
    "plt.xlabel('Number of schools')\n",
    "plt.ylabel('County') \n",
    "plt.grid()\n",
    "plt.tight_layout()\n",
    "plt.savefig(\"Output_files/Figures/Number_Of_Schools_With_Rank_Star_Per_County\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Analysis of crime data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>County</th>\n",
       "      <th>Yearly Crime</th>\n",
       "      <th>Yearly Crime(%)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Atlantic</td>\n",
       "      <td>6402</td>\n",
       "      <td>4.504010</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Bergen</td>\n",
       "      <td>9070</td>\n",
       "      <td>6.381033</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Burlington</td>\n",
       "      <td>6209</td>\n",
       "      <td>4.368229</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Camden</td>\n",
       "      <td>13073</td>\n",
       "      <td>9.197270</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Cape May</td>\n",
       "      <td>2065</td>\n",
       "      <td>1.452793</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       County  Yearly Crime  Yearly Crime(%)\n",
       "0    Atlantic          6402         4.504010\n",
       "1      Bergen          9070         6.381033\n",
       "2  Burlington          6209         4.368229\n",
       "3      Camden         13073         9.197270\n",
       "4    Cape May          2065         1.452793"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Create county based grouped dataframe with yearly crime %\n",
    "crime_group = crime.groupby(\"County\")[\"Total Yearly Crimes\"].sum()\n",
    "total_crime = crime[\"Total Yearly Crimes\"].sum()\n",
    "percent_crime = (crime_group/total_crime)*100\n",
    "\n",
    "\n",
    "#Store names of counties in an array\n",
    "county_name = crime.sort_values(\"County\")\n",
    "county_name_unique=county_name[\"County\"].unique()\n",
    "\n",
    "#Create data frame to store the above result\n",
    "percent_crime_df = pd.DataFrame({\n",
    "    \n",
    "                                \"County\":county_name_unique,\n",
    "                                \"Yearly Crime\":crime_group,\n",
    "                                \"Yearly Crime(%)\":percent_crime\n",
    "})\n",
    "percent_crime_df= percent_crime_df.reset_index(drop=True)\n",
    "percent_crime_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "min:0.2462361052483467,max: 12.384269030533277\n"
     ]
    }
   ],
   "source": [
    "#Check min and max of total crime rate\n",
    "min_percent_crime=percent_crime.min()\n",
    "max_percent_crime=percent_crime.max()\n",
    "print(f\"min:{min_percent_crime},max: {max_percent_crime}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>County</th>\n",
       "      <th>Yearly Crime</th>\n",
       "      <th>Yearly Crime(%)</th>\n",
       "      <th>Crime Rate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Warren</td>\n",
       "      <td>350</td>\n",
       "      <td>0.246236</td>\n",
       "      <td>Low (0.0-3.4%)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Hunterdon</td>\n",
       "      <td>600</td>\n",
       "      <td>0.422119</td>\n",
       "      <td>Low (0.0-3.4%)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Sussex</td>\n",
       "      <td>697</td>\n",
       "      <td>0.490362</td>\n",
       "      <td>Low (0.0-3.4%)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Salem</td>\n",
       "      <td>1134</td>\n",
       "      <td>0.797805</td>\n",
       "      <td>Low (0.0-3.4%)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Cape May</td>\n",
       "      <td>2065</td>\n",
       "      <td>1.452793</td>\n",
       "      <td>Low (0.0-3.4%)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      County  Yearly Crime  Yearly Crime(%)      Crime Rate\n",
       "0     Warren           350         0.246236  Low (0.0-3.4%)\n",
       "1  Hunterdon           600         0.422119  Low (0.0-3.4%)\n",
       "2     Sussex           697         0.490362  Low (0.0-3.4%)\n",
       "3      Salem          1134         0.797805  Low (0.0-3.4%)\n",
       "4   Cape May          2065         1.452793  Low (0.0-3.4%)"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Categorize counties based on percent crime rate taking account of min and max values\n",
    "size_bins=[0.0,3.5,6.5,9.5,12.5]\n",
    "labels=[\"Low (0.0-3.4%)\", \"Moderate (3.5-6.4%)\", \"High (6.5-9.4%)\", \"Very High (9.5-12.4%)\"]\n",
    "\n",
    "#Create a dataframe to store the result\n",
    "county_by_crime_rate_category=percent_crime_df.loc[:,:]\n",
    "county_by_crime_rate_category[\"Crime Rate\"]=pd.cut(percent_crime_df[\"Yearly Crime(%)\"], size_bins, labels=labels)\n",
    "\n",
    "#Sort values to see top 5 counties with low crime rate\n",
    "county_by_crime_rate_sorted=county_by_crime_rate_category.sort_values(\"Yearly Crime(%)\")\n",
    "\n",
    "# Run the .reset_index() on the sorted dataframe\n",
    "# Pass in drop=True to prevent appending a new column with the old indexes to the dataframe\n",
    "county_by_crime_rate_sorted= county_by_crime_rate_sorted.reset_index(drop=True)\n",
    "county_by_crime_rate_sorted.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Analysis of real estate data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "County\n",
       "Bergen      438778.938504\n",
       "Essex       440203.586124\n",
       "Hudson      452534.207865\n",
       "Monmouth    374238.249840\n",
       "Morris      383466.091131\n",
       "Ocean       275435.588598\n",
       "Passaic     328642.158508\n",
       "Somerset    340228.129082\n",
       "Sussex      218763.166443\n",
       "Union       346384.616195\n",
       "Name: SalesPrice, dtype: float64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Group data based on county and calculate average price for 3 bedrooms \n",
    "resident_df_3beds = resident_df.loc[resident_df[\"Beds\"]==3]\n",
    "resident_df_3beds_group = resident_df_3beds.groupby(\"County\")[\"SalesPrice\"].mean()\n",
    "resident_df_3beds_group.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>County</th>\n",
       "      <th>Average Price(3 bed)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Bergen</td>\n",
       "      <td>438778.938504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Essex</td>\n",
       "      <td>440203.586124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Hudson</td>\n",
       "      <td>452534.207865</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Monmouth</td>\n",
       "      <td>374238.249840</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Morris</td>\n",
       "      <td>383466.091131</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     County  Average Price(3 bed)\n",
       "0    Bergen         438778.938504\n",
       "1    Essex          440203.586124\n",
       "2    Hudson         452534.207865\n",
       "3  Monmouth         374238.249840\n",
       "4    Morris         383466.091131"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Store data in a dataframe\n",
    "#get counties\n",
    "county = resident_df.sort_values(\"County\")\n",
    "county_unique=county[\"County\"].unique()\n",
    "\n",
    "beds3_dict=({\n",
    "        \"County\":county_unique,\n",
    "        \"Average Price(3 bed)\":resident_df_3beds_group\n",
    "    \n",
    "})\n",
    "\n",
    "beds3_df=pd.DataFrame(beds3_dict)\n",
    "beds3_df=beds3_df.reset_index(drop=True)\n",
    "beds3_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Population data cleaning"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Rank</th>\n",
       "      <th>County</th>\n",
       "      <th>Population</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>15</td>\n",
       "      <td>Atlantic</td>\n",
       "      <td>265429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Bergen</td>\n",
       "      <td>936692</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>11</td>\n",
       "      <td>Burlington</td>\n",
       "      <td>445384</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>Camden</td>\n",
       "      <td>507078</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>20</td>\n",
       "      <td>Cape May</td>\n",
       "      <td>92560</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Rank       County  Population\n",
       "14    15    Atlantic       265429\n",
       "0      1      Bergen       936692\n",
       "10    11  Burlington       445384\n",
       "7      8      Camden       507078\n",
       "19    20    Cape May        92560"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Sorting df\n",
    "population=population.sort_values(\"County\")\n",
    "population.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Rank</th>\n",
       "      <th>County</th>\n",
       "      <th>Population</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>15</td>\n",
       "      <td>Atlantic</td>\n",
       "      <td>265429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Bergen</td>\n",
       "      <td>936692</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>11</td>\n",
       "      <td>Burlington</td>\n",
       "      <td>445384</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>Camden</td>\n",
       "      <td>507078</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>20</td>\n",
       "      <td>Cape May</td>\n",
       "      <td>92560</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Rank      County  Population\n",
       "14    15    Atlantic      265429\n",
       "0      1      Bergen      936692\n",
       "10    11  Burlington      445384\n",
       "7      8      Camden      507078\n",
       "19    20    Cape May       92560"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Clean step performed before merging with the County key \n",
    "population_clean_df = population.copy(deep=True)\n",
    "population_clean_df[\"County\"] = [value.strip() for value in population_clean_df[\"County\"]]\n",
    "population_clean_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Merging all dataframes for analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1.Merging school and crime data to check correlation between school and crime data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>County</th>\n",
       "      <th>5 Stars</th>\n",
       "      <th>4 Stars</th>\n",
       "      <th>3 Stars</th>\n",
       "      <th>Mean of Score (5*)</th>\n",
       "      <th>Mean of Score (4*)</th>\n",
       "      <th>Mean of Score (3*)</th>\n",
       "      <th>Average Mean Score</th>\n",
       "      <th>Yearly Crime</th>\n",
       "      <th>Yearly Crime(%)</th>\n",
       "      <th>Crime Rate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Atlantic</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>78.796723</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>26.265574</td>\n",
       "      <td>6402</td>\n",
       "      <td>4.504010</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Bergen</td>\n",
       "      <td>36.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>92.108301</td>\n",
       "      <td>80.485967</td>\n",
       "      <td>66.481758</td>\n",
       "      <td>79.692009</td>\n",
       "      <td>9070</td>\n",
       "      <td>6.381033</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Burlington</td>\n",
       "      <td>2.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>92.191000</td>\n",
       "      <td>78.922172</td>\n",
       "      <td>64.366455</td>\n",
       "      <td>78.493209</td>\n",
       "      <td>6209</td>\n",
       "      <td>4.368229</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Camden</td>\n",
       "      <td>5.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>91.902830</td>\n",
       "      <td>78.059004</td>\n",
       "      <td>63.192429</td>\n",
       "      <td>77.718088</td>\n",
       "      <td>13073</td>\n",
       "      <td>9.197270</td>\n",
       "      <td>High (6.5-9.4%)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Cape May</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>78.062050</td>\n",
       "      <td>65.185955</td>\n",
       "      <td>47.749335</td>\n",
       "      <td>2065</td>\n",
       "      <td>1.452793</td>\n",
       "      <td>Low (0.0-3.4%)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       County  5 Stars  4 Stars  3 Stars  Mean of Score (5*)  \\\n",
       "0    Atlantic      0.0      3.0      0.0            0.000000   \n",
       "1      Bergen     36.0     58.0     24.0           92.108301   \n",
       "2  Burlington      2.0     13.0      6.0           92.191000   \n",
       "3      Camden      5.0     16.0     14.0           91.902830   \n",
       "4    Cape May      0.0      2.0      2.0            0.000000   \n",
       "\n",
       "   Mean of Score (4*)  Mean of Score (3*)  Average Mean Score  Yearly Crime  \\\n",
       "0           78.796723            0.000000           26.265574          6402   \n",
       "1           80.485967           66.481758           79.692009          9070   \n",
       "2           78.922172           64.366455           78.493209          6209   \n",
       "3           78.059004           63.192429           77.718088         13073   \n",
       "4           78.062050           65.185955           47.749335          2065   \n",
       "\n",
       "   Yearly Crime(%)           Crime Rate  \n",
       "0         4.504010  Moderate (3.5-6.4%)  \n",
       "1         6.381033  Moderate (3.5-6.4%)  \n",
       "2         4.368229  Moderate (3.5-6.4%)  \n",
       "3         9.197270      High (6.5-9.4%)  \n",
       "4         1.452793       Low (0.0-3.4%)  "
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Merge crime and school data\n",
    "school_crime=pd.merge(rankwise_school_per_county,county_by_crime_rate_category, on=\"County\", how=\"outer\")\n",
    "school_crime.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>County</th>\n",
       "      <th>5 Stars</th>\n",
       "      <th>4 Stars</th>\n",
       "      <th>3 Stars</th>\n",
       "      <th>Mean of Score (5*)</th>\n",
       "      <th>Mean of Score (4*)</th>\n",
       "      <th>Mean of Score (3*)</th>\n",
       "      <th>Average Mean Score</th>\n",
       "      <th>Yearly Crime</th>\n",
       "      <th>Yearly Crime(%)</th>\n",
       "      <th>Crime Rate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Atlantic</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>78.796723</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>26.265574</td>\n",
       "      <td>6402</td>\n",
       "      <td>4.504010</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Bergen</td>\n",
       "      <td>36.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>92.108301</td>\n",
       "      <td>80.485967</td>\n",
       "      <td>66.481758</td>\n",
       "      <td>79.692009</td>\n",
       "      <td>9070</td>\n",
       "      <td>6.381033</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Burlington</td>\n",
       "      <td>2.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>92.191000</td>\n",
       "      <td>78.922172</td>\n",
       "      <td>64.366455</td>\n",
       "      <td>78.493209</td>\n",
       "      <td>6209</td>\n",
       "      <td>4.368229</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Camden</td>\n",
       "      <td>5.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>91.902830</td>\n",
       "      <td>78.059004</td>\n",
       "      <td>63.192429</td>\n",
       "      <td>77.718088</td>\n",
       "      <td>13073</td>\n",
       "      <td>9.197270</td>\n",
       "      <td>High (6.5-9.4%)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Cape May</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>78.062050</td>\n",
       "      <td>65.185955</td>\n",
       "      <td>47.749335</td>\n",
       "      <td>2065</td>\n",
       "      <td>1.452793</td>\n",
       "      <td>Low (0.0-3.4%)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       County  5 Stars  4 Stars  3 Stars  Mean of Score (5*)  \\\n",
       "0    Atlantic      0.0      3.0      0.0            0.000000   \n",
       "1      Bergen     36.0     58.0     24.0           92.108301   \n",
       "2  Burlington      2.0     13.0      6.0           92.191000   \n",
       "3      Camden      5.0     16.0     14.0           91.902830   \n",
       "4    Cape May      0.0      2.0      2.0            0.000000   \n",
       "\n",
       "   Mean of Score (4*)  Mean of Score (3*)  Average Mean Score  Yearly Crime  \\\n",
       "0           78.796723            0.000000           26.265574          6402   \n",
       "1           80.485967           66.481758           79.692009          9070   \n",
       "2           78.922172           64.366455           78.493209          6209   \n",
       "3           78.059004           63.192429           77.718088         13073   \n",
       "4           78.062050           65.185955           47.749335          2065   \n",
       "\n",
       "   Yearly Crime(%)           Crime Rate  \n",
       "0         4.504010  Moderate (3.5-6.4%)  \n",
       "1         6.381033  Moderate (3.5-6.4%)  \n",
       "2         4.368229  Moderate (3.5-6.4%)  \n",
       "3         9.197270      High (6.5-9.4%)  \n",
       "4         1.452793       Low (0.0-3.4%)  "
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Drop null values\n",
    "school_crime=school_crime.dropna()\n",
    "school_crime.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The r-squared is: 0.5073895927233405\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Scatter plot with regression analysis for Crime Rate versus School Score\n",
    "x_values=school_crime[\"Yearly Crime(%)\"]\n",
    "y_values=school_crime[\"Average Mean Score\"]\n",
    "\n",
    "#Generate regression line equation\n",
    "(slope, intercept, rvalue, pvalue, stderr) = linregress(x_values, y_values)\n",
    "regress_values = x_values * slope + intercept\n",
    "line_eq = \"y = \" + str(round(slope,2)) + \"x + \" + str(round(intercept,2))\n",
    "\n",
    "#Generate scatter plot\n",
    "plt.scatter(x_values,y_values, marker=\"o\", facecolors=\"steelblue\", edgecolors=\"black\")\n",
    "plt.plot(x_values,regress_values,\"r-\")\n",
    "plt.annotate(line_eq,(4,55),fontsize=15,color=\"red\")\n",
    "plt.title(\"Correlation Between Crime Rate and School Score\")\n",
    "plt.xlabel(\"Yearly crime rate (%)\")\n",
    "plt.ylabel(\"Average Mean Score\")\n",
    "\n",
    "#Display r-squared value\n",
    "print(f\"The r-squared is: {rvalue}\")\n",
    "\n",
    "#Save and display plot\n",
    "plt.savefig(\"Output_files/Figures/Crime Rate vs School Score\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "2. Merging population data to the previously merged dataframe and check for its correlation with crime"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Rank</th>\n",
       "      <th>County</th>\n",
       "      <th>Population</th>\n",
       "      <th>5 Stars</th>\n",
       "      <th>4 Stars</th>\n",
       "      <th>3 Stars</th>\n",
       "      <th>Mean of Score (5*)</th>\n",
       "      <th>Mean of Score (4*)</th>\n",
       "      <th>Mean of Score (3*)</th>\n",
       "      <th>Average Mean Score</th>\n",
       "      <th>Yearly Crime</th>\n",
       "      <th>Yearly Crime(%)</th>\n",
       "      <th>Crime Rate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>15</td>\n",
       "      <td>Atlantic</td>\n",
       "      <td>265429</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>78.796723</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>26.265574</td>\n",
       "      <td>6402.0</td>\n",
       "      <td>4.504010</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Bergen</td>\n",
       "      <td>936692</td>\n",
       "      <td>36.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>92.108301</td>\n",
       "      <td>80.485967</td>\n",
       "      <td>66.481758</td>\n",
       "      <td>79.692009</td>\n",
       "      <td>9070.0</td>\n",
       "      <td>6.381033</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>11</td>\n",
       "      <td>Burlington</td>\n",
       "      <td>445384</td>\n",
       "      <td>2.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>92.191000</td>\n",
       "      <td>78.922172</td>\n",
       "      <td>64.366455</td>\n",
       "      <td>78.493209</td>\n",
       "      <td>6209.0</td>\n",
       "      <td>4.368229</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8</td>\n",
       "      <td>Camden</td>\n",
       "      <td>507078</td>\n",
       "      <td>5.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>91.902830</td>\n",
       "      <td>78.059004</td>\n",
       "      <td>63.192429</td>\n",
       "      <td>77.718088</td>\n",
       "      <td>13073.0</td>\n",
       "      <td>9.197270</td>\n",
       "      <td>High (6.5-9.4%)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>20</td>\n",
       "      <td>Cape May</td>\n",
       "      <td>92560</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>78.062050</td>\n",
       "      <td>65.185955</td>\n",
       "      <td>47.749335</td>\n",
       "      <td>2065.0</td>\n",
       "      <td>1.452793</td>\n",
       "      <td>Low (0.0-3.4%)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Rank      County  Population  5 Stars  4 Stars  3 Stars  \\\n",
       "0    15    Atlantic      265429      0.0      3.0      0.0   \n",
       "1     1      Bergen      936692     36.0     58.0     24.0   \n",
       "2    11  Burlington      445384      2.0     13.0      6.0   \n",
       "3     8      Camden      507078      5.0     16.0     14.0   \n",
       "4    20    Cape May       92560      0.0      2.0      2.0   \n",
       "\n",
       "   Mean of Score (5*)  Mean of Score (4*)  Mean of Score (3*)  \\\n",
       "0            0.000000           78.796723            0.000000   \n",
       "1           92.108301           80.485967           66.481758   \n",
       "2           92.191000           78.922172           64.366455   \n",
       "3           91.902830           78.059004           63.192429   \n",
       "4            0.000000           78.062050           65.185955   \n",
       "\n",
       "   Average Mean Score  Yearly Crime  Yearly Crime(%)           Crime Rate  \n",
       "0           26.265574        6402.0         4.504010  Moderate (3.5-6.4%)  \n",
       "1           79.692009        9070.0         6.381033  Moderate (3.5-6.4%)  \n",
       "2           78.493209        6209.0         4.368229  Moderate (3.5-6.4%)  \n",
       "3           77.718088       13073.0         9.197270      High (6.5-9.4%)  \n",
       "4           47.749335        2065.0         1.452793       Low (0.0-3.4%)  "
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Merge population data\n",
    "school_crime_pop=pd.merge(population_clean_df, school_crime, on=\"County\", how=\"outer\")\n",
    "school_crime_pop=school_crime_pop.dropna()\n",
    "school_crime_pop.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Rank</th>\n",
       "      <th>County</th>\n",
       "      <th>Population</th>\n",
       "      <th>5 Stars</th>\n",
       "      <th>4 Stars</th>\n",
       "      <th>3 Stars</th>\n",
       "      <th>Mean of Score (5*)</th>\n",
       "      <th>Mean of Score (4*)</th>\n",
       "      <th>Mean of Score (3*)</th>\n",
       "      <th>Average Mean Score</th>\n",
       "      <th>Yearly Crime</th>\n",
       "      <th>Yearly Crime(%)</th>\n",
       "      <th>Crime Rate</th>\n",
       "      <th>Percent Population</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>15</td>\n",
       "      <td>Atlantic</td>\n",
       "      <td>265429</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>78.796723</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>26.265574</td>\n",
       "      <td>6402.0</td>\n",
       "      <td>4.504010</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "      <td>3.030860</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Bergen</td>\n",
       "      <td>936692</td>\n",
       "      <td>36.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>92.108301</td>\n",
       "      <td>80.485967</td>\n",
       "      <td>66.481758</td>\n",
       "      <td>79.692009</td>\n",
       "      <td>9070.0</td>\n",
       "      <td>6.381033</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "      <td>10.695825</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>11</td>\n",
       "      <td>Burlington</td>\n",
       "      <td>445384</td>\n",
       "      <td>2.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>92.191000</td>\n",
       "      <td>78.922172</td>\n",
       "      <td>64.366455</td>\n",
       "      <td>78.493209</td>\n",
       "      <td>6209.0</td>\n",
       "      <td>4.368229</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "      <td>5.085716</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8</td>\n",
       "      <td>Camden</td>\n",
       "      <td>507078</td>\n",
       "      <td>5.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>91.902830</td>\n",
       "      <td>78.059004</td>\n",
       "      <td>63.192429</td>\n",
       "      <td>77.718088</td>\n",
       "      <td>13073.0</td>\n",
       "      <td>9.197270</td>\n",
       "      <td>High (6.5-9.4%)</td>\n",
       "      <td>5.790182</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>20</td>\n",
       "      <td>Cape May</td>\n",
       "      <td>92560</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>78.062050</td>\n",
       "      <td>65.185955</td>\n",
       "      <td>47.749335</td>\n",
       "      <td>2065.0</td>\n",
       "      <td>1.452793</td>\n",
       "      <td>Low (0.0-3.4%)</td>\n",
       "      <td>1.056917</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>3</td>\n",
       "      <td>Essex</td>\n",
       "      <td>799767</td>\n",
       "      <td>16.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>92.366122</td>\n",
       "      <td>80.555261</td>\n",
       "      <td>68.984594</td>\n",
       "      <td>80.635326</td>\n",
       "      <td>17603.0</td>\n",
       "      <td>12.384269</td>\n",
       "      <td>Very High (9.5-12.4%)</td>\n",
       "      <td>9.132316</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>14</td>\n",
       "      <td>Gloucester</td>\n",
       "      <td>291408</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>78.715763</td>\n",
       "      <td>63.082208</td>\n",
       "      <td>47.265990</td>\n",
       "      <td>5077.0</td>\n",
       "      <td>3.571831</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "      <td>3.327507</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>4</td>\n",
       "      <td>Hudson</td>\n",
       "      <td>676061</td>\n",
       "      <td>4.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>92.428713</td>\n",
       "      <td>80.238670</td>\n",
       "      <td>64.470844</td>\n",
       "      <td>79.046075</td>\n",
       "      <td>13241.0</td>\n",
       "      <td>9.315464</td>\n",
       "      <td>High (6.5-9.4%)</td>\n",
       "      <td>7.719752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>18</td>\n",
       "      <td>Hunterdon</td>\n",
       "      <td>124714</td>\n",
       "      <td>2.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>92.160060</td>\n",
       "      <td>79.660585</td>\n",
       "      <td>64.896967</td>\n",
       "      <td>78.905871</td>\n",
       "      <td>600.0</td>\n",
       "      <td>0.422119</td>\n",
       "      <td>Low (0.0-3.4%)</td>\n",
       "      <td>1.424074</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>12</td>\n",
       "      <td>Mercer</td>\n",
       "      <td>369811</td>\n",
       "      <td>6.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>91.267397</td>\n",
       "      <td>80.542990</td>\n",
       "      <td>65.110399</td>\n",
       "      <td>78.973595</td>\n",
       "      <td>8090.0</td>\n",
       "      <td>5.691572</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "      <td>4.222769</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2</td>\n",
       "      <td>Middlesex</td>\n",
       "      <td>829685</td>\n",
       "      <td>12.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>19.0</td>\n",
       "      <td>91.153856</td>\n",
       "      <td>79.992876</td>\n",
       "      <td>65.909011</td>\n",
       "      <td>79.018581</td>\n",
       "      <td>10934.0</td>\n",
       "      <td>7.692416</td>\n",
       "      <td>High (6.5-9.4%)</td>\n",
       "      <td>9.473942</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>5</td>\n",
       "      <td>Monmouth</td>\n",
       "      <td>621354</td>\n",
       "      <td>9.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>90.372806</td>\n",
       "      <td>79.944501</td>\n",
       "      <td>66.722680</td>\n",
       "      <td>79.013329</td>\n",
       "      <td>8156.0</td>\n",
       "      <td>5.738005</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "      <td>7.095068</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>10</td>\n",
       "      <td>Morris</td>\n",
       "      <td>494228</td>\n",
       "      <td>16.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>91.423962</td>\n",
       "      <td>79.385451</td>\n",
       "      <td>66.309983</td>\n",
       "      <td>79.039799</td>\n",
       "      <td>3405.0</td>\n",
       "      <td>2.395526</td>\n",
       "      <td>Low (0.0-3.4%)</td>\n",
       "      <td>5.643452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>6</td>\n",
       "      <td>Ocean</td>\n",
       "      <td>601651</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>78.377540</td>\n",
       "      <td>65.777706</td>\n",
       "      <td>48.051749</td>\n",
       "      <td>6370.0</td>\n",
       "      <td>4.481497</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "      <td>6.870085</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>9</td>\n",
       "      <td>Passaic</td>\n",
       "      <td>503310</td>\n",
       "      <td>2.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>94.852240</td>\n",
       "      <td>76.221174</td>\n",
       "      <td>65.424811</td>\n",
       "      <td>78.832742</td>\n",
       "      <td>10344.0</td>\n",
       "      <td>7.277332</td>\n",
       "      <td>High (6.5-9.4%)</td>\n",
       "      <td>5.747157</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>21</td>\n",
       "      <td>Salem</td>\n",
       "      <td>62607</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>73.533540</td>\n",
       "      <td>69.598117</td>\n",
       "      <td>47.710552</td>\n",
       "      <td>1134.0</td>\n",
       "      <td>0.797805</td>\n",
       "      <td>Low (0.0-3.4%)</td>\n",
       "      <td>0.714892</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>13</td>\n",
       "      <td>Somerset</td>\n",
       "      <td>331164</td>\n",
       "      <td>11.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>91.225956</td>\n",
       "      <td>81.293444</td>\n",
       "      <td>69.009048</td>\n",
       "      <td>80.509483</td>\n",
       "      <td>3213.0</td>\n",
       "      <td>2.260447</td>\n",
       "      <td>Low (0.0-3.4%)</td>\n",
       "      <td>3.781469</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>17</td>\n",
       "      <td>Sussex</td>\n",
       "      <td>140799</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>75.982500</td>\n",
       "      <td>65.644057</td>\n",
       "      <td>47.208852</td>\n",
       "      <td>697.0</td>\n",
       "      <td>0.490362</td>\n",
       "      <td>Low (0.0-3.4%)</td>\n",
       "      <td>1.607745</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>7</td>\n",
       "      <td>Union</td>\n",
       "      <td>558067</td>\n",
       "      <td>16.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>91.485549</td>\n",
       "      <td>80.460416</td>\n",
       "      <td>66.025710</td>\n",
       "      <td>79.323892</td>\n",
       "      <td>11044.0</td>\n",
       "      <td>7.769804</td>\n",
       "      <td>High (6.5-9.4%)</td>\n",
       "      <td>6.372412</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>19</td>\n",
       "      <td>Warren</td>\n",
       "      <td>105779</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>80.583405</td>\n",
       "      <td>65.879694</td>\n",
       "      <td>48.821033</td>\n",
       "      <td>350.0</td>\n",
       "      <td>0.246236</td>\n",
       "      <td>Low (0.0-3.4%)</td>\n",
       "      <td>1.207861</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Rank      County  Population  5 Stars  4 Stars  3 Stars  \\\n",
       "0     15    Atlantic      265429      0.0      3.0      0.0   \n",
       "1      1      Bergen      936692     36.0     58.0     24.0   \n",
       "2     11  Burlington      445384      2.0     13.0      6.0   \n",
       "3      8      Camden      507078      5.0     16.0     14.0   \n",
       "4     20    Cape May       92560      0.0      2.0      2.0   \n",
       "6      3       Essex      799767     16.0     26.0     11.0   \n",
       "7     14  Gloucester      291408      0.0      7.0      4.0   \n",
       "8      4      Hudson      676061      4.0      6.0      8.0   \n",
       "9     18   Hunterdon      124714      2.0      8.0      7.0   \n",
       "10    12      Mercer      369811      6.0      8.0      8.0   \n",
       "11     2   Middlesex      829685     12.0     20.0     19.0   \n",
       "12     5    Monmouth      621354      9.0     28.0     20.0   \n",
       "13    10      Morris      494228     16.0     31.0     18.0   \n",
       "14     6       Ocean      601651      0.0      4.0     11.0   \n",
       "15     9     Passaic      503310      2.0      8.0     14.0   \n",
       "16    21       Salem       62607      0.0      1.0      3.0   \n",
       "17    13    Somerset      331164     11.0     12.0      4.0   \n",
       "18    17      Sussex      140799      0.0      4.0      6.0   \n",
       "19     7       Union      558067     16.0     17.0      3.0   \n",
       "20    19      Warren      105779      0.0      2.0      7.0   \n",
       "\n",
       "    Mean of Score (5*)  Mean of Score (4*)  Mean of Score (3*)  \\\n",
       "0             0.000000           78.796723            0.000000   \n",
       "1            92.108301           80.485967           66.481758   \n",
       "2            92.191000           78.922172           64.366455   \n",
       "3            91.902830           78.059004           63.192429   \n",
       "4             0.000000           78.062050           65.185955   \n",
       "6            92.366122           80.555261           68.984594   \n",
       "7             0.000000           78.715763           63.082208   \n",
       "8            92.428713           80.238670           64.470844   \n",
       "9            92.160060           79.660585           64.896967   \n",
       "10           91.267397           80.542990           65.110399   \n",
       "11           91.153856           79.992876           65.909011   \n",
       "12           90.372806           79.944501           66.722680   \n",
       "13           91.423962           79.385451           66.309983   \n",
       "14            0.000000           78.377540           65.777706   \n",
       "15           94.852240           76.221174           65.424811   \n",
       "16            0.000000           73.533540           69.598117   \n",
       "17           91.225956           81.293444           69.009048   \n",
       "18            0.000000           75.982500           65.644057   \n",
       "19           91.485549           80.460416           66.025710   \n",
       "20            0.000000           80.583405           65.879694   \n",
       "\n",
       "    Average Mean Score  Yearly Crime  Yearly Crime(%)             Crime Rate  \\\n",
       "0            26.265574        6402.0         4.504010    Moderate (3.5-6.4%)   \n",
       "1            79.692009        9070.0         6.381033    Moderate (3.5-6.4%)   \n",
       "2            78.493209        6209.0         4.368229    Moderate (3.5-6.4%)   \n",
       "3            77.718088       13073.0         9.197270        High (6.5-9.4%)   \n",
       "4            47.749335        2065.0         1.452793         Low (0.0-3.4%)   \n",
       "6            80.635326       17603.0        12.384269  Very High (9.5-12.4%)   \n",
       "7            47.265990        5077.0         3.571831    Moderate (3.5-6.4%)   \n",
       "8            79.046075       13241.0         9.315464        High (6.5-9.4%)   \n",
       "9            78.905871         600.0         0.422119         Low (0.0-3.4%)   \n",
       "10           78.973595        8090.0         5.691572    Moderate (3.5-6.4%)   \n",
       "11           79.018581       10934.0         7.692416        High (6.5-9.4%)   \n",
       "12           79.013329        8156.0         5.738005    Moderate (3.5-6.4%)   \n",
       "13           79.039799        3405.0         2.395526         Low (0.0-3.4%)   \n",
       "14           48.051749        6370.0         4.481497    Moderate (3.5-6.4%)   \n",
       "15           78.832742       10344.0         7.277332        High (6.5-9.4%)   \n",
       "16           47.710552        1134.0         0.797805         Low (0.0-3.4%)   \n",
       "17           80.509483        3213.0         2.260447         Low (0.0-3.4%)   \n",
       "18           47.208852         697.0         0.490362         Low (0.0-3.4%)   \n",
       "19           79.323892       11044.0         7.769804        High (6.5-9.4%)   \n",
       "20           48.821033         350.0         0.246236         Low (0.0-3.4%)   \n",
       "\n",
       "    Percent Population  \n",
       "0             3.030860  \n",
       "1            10.695825  \n",
       "2             5.085716  \n",
       "3             5.790182  \n",
       "4             1.056917  \n",
       "6             9.132316  \n",
       "7             3.327507  \n",
       "8             7.719752  \n",
       "9             1.424074  \n",
       "10            4.222769  \n",
       "11            9.473942  \n",
       "12            7.095068  \n",
       "13            5.643452  \n",
       "14            6.870085  \n",
       "15            5.747157  \n",
       "16            0.714892  \n",
       "17            3.781469  \n",
       "18            1.607745  \n",
       "19            6.372412  \n",
       "20            1.207861  "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Calculate percent population for each county \n",
    "total_population=school_crime_pop[\"Population\"].sum()\n",
    "percent_population=(school_crime_pop[\"Population\"]/total_population)*100\n",
    "\n",
    "#Add a new column in the dataframe with percent population\n",
    "school_crime_pop[\"Percent Population\"]=percent_population\n",
    "school_crime_pop.head(25)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Creating pie plot(donut plot) for percent poulation to be compared with percent crime per county\n",
    "County = school_crime_pop[\"County\"]\n",
    "percent_population = school_crime_pop[\"Population\"]\n",
    "explode = (0.1,0.3,0.1,0.3,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1)\n",
    "\n",
    "# Create a pie chart based upon the above data\n",
    "plt.pie(percent_population, labels=County, \n",
    "        autopct=\"%1.1f%%\",pctdistance=0.85, labeldistance=1.2, explode=explode, shadow=True, startangle=140)\n",
    "\n",
    "#Convert the pie plot to donut plot\n",
    "centre_circle = plt.Circle((0,0),0.70,fc='white')\n",
    "fig = plt.gcf()\n",
    "fig.gca().add_artist(centre_circle)\n",
    "\n",
    "# Create axes which are equal so we have a perfect circle\n",
    "plt.axis(\"equal\")\n",
    "plt.tight_layout()\n",
    "\n",
    "# Save and display plot\n",
    "plt.savefig(\"Output_files/Figures/Percent_Population_Per_County\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Creating pie plot(donut plot) for percent crime to be compared with percent poulation per county\n",
    "County = school_crime_pop[\"County\"]\n",
    "percent_crime = school_crime_pop[\"Yearly Crime\"]\n",
    "explode = (0.1,0.3,0.1,0.3,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1)\n",
    "\n",
    "# Create a pie chart based upon the above data\n",
    "plt.pie(percent_crime, labels=County, \n",
    "        autopct=\"%1.1f%%\",pctdistance=0.85,labeldistance=1.3, explode=explode, shadow=True, startangle=140)\n",
    "\n",
    "#Convert the pie plot to donut plot\n",
    "centre_circle = plt.Circle((0,0),0.70,fc='white')\n",
    "fig = plt.gcf()\n",
    "fig.gca().add_artist(centre_circle)\n",
    "\n",
    "# Create axes which are equal so we have a perfect circle\n",
    "plt.axis(\"equal\")\n",
    "plt.tight_layout()\n",
    "\n",
    "# Save and display plot\n",
    "plt.savefig(\"Output_files/Figures/Percent_Crime_Per_County\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The r-squared is: 0.8078885726412083\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Scatter plot of population versus crime rate\n",
    "y_values=school_crime_pop[\"Population\"]\n",
    "x_values=school_crime_pop[\"Yearly Crime(%)\"]\n",
    "\n",
    "#Generate regression line equation\n",
    "(slope, intercept, rvalue, pvalue, stderr) = linregress(x_values, y_values)\n",
    "regress_values = x_values * slope + intercept\n",
    "line_eq = \"y = \" + str(round(slope,2)) + \"x + \" + str(round(intercept,2))\n",
    "\n",
    "#Generate scatter plot\n",
    "plt.scatter(x_values,y_values, marker=\"o\", facecolors=\"steelblue\", edgecolors=\"black\")\n",
    "plt.plot(x_values,regress_values,\"r-\")\n",
    "plt.annotate(line_eq,(4,350000),fontsize=15,color=\"red\")\n",
    "plt.title(\"Population versus Crime Rate\")\n",
    "plt.ylabel(\"Population\")\n",
    "plt.xlabel(\"Yearly crime rate (%)\")\n",
    "\n",
    "#Display r-squared value \n",
    "print(f\"The r-squared is: {rvalue}\")\n",
    "\n",
    "#Save and display plot\n",
    "plt.tight_layout()\n",
    "plt.savefig(\"Output_files/Figures/Population vs Crime Rate\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "3. Merging residential data for 3 bedrooms with the merged dataframe and check its correlation with school score, crime for each available county"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>County</th>\n",
       "      <th>Average Price(3 bed)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Bergen</td>\n",
       "      <td>438778.938504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Essex</td>\n",
       "      <td>440203.586124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Hudson</td>\n",
       "      <td>452534.207865</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Monmouth</td>\n",
       "      <td>374238.249840</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Morris</td>\n",
       "      <td>383466.091131</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     County  Average Price(3 bed)\n",
       "0    Bergen         438778.938504\n",
       "1     Essex         440203.586124\n",
       "2    Hudson         452534.207865\n",
       "3  Monmouth         374238.249840\n",
       "4    Morris         383466.091131"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Clean step performed before merging with the County key \n",
    "beds3_clean_df = beds3_df.copy(deep=True)\n",
    "beds3_clean_df[\"County\"] = [value.strip() for value in beds3_clean_df[\"County\"]]\n",
    "beds3_clean_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Rank</th>\n",
       "      <th>County</th>\n",
       "      <th>Population</th>\n",
       "      <th>5 Stars</th>\n",
       "      <th>4 Stars</th>\n",
       "      <th>3 Stars</th>\n",
       "      <th>Mean of Score (5*)</th>\n",
       "      <th>Mean of Score (4*)</th>\n",
       "      <th>Mean of Score (3*)</th>\n",
       "      <th>Average Mean Score</th>\n",
       "      <th>Yearly Crime</th>\n",
       "      <th>Yearly Crime(%)</th>\n",
       "      <th>Crime Rate</th>\n",
       "      <th>Average Price(3 bed)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>15</td>\n",
       "      <td>Atlantic</td>\n",
       "      <td>265429</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>78.796723</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>26.265574</td>\n",
       "      <td>6402.0</td>\n",
       "      <td>4.504010</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Bergen</td>\n",
       "      <td>936692</td>\n",
       "      <td>36.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>92.108301</td>\n",
       "      <td>80.485967</td>\n",
       "      <td>66.481758</td>\n",
       "      <td>79.692009</td>\n",
       "      <td>9070.0</td>\n",
       "      <td>6.381033</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "      <td>438778.938504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>11</td>\n",
       "      <td>Burlington</td>\n",
       "      <td>445384</td>\n",
       "      <td>2.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>92.191000</td>\n",
       "      <td>78.922172</td>\n",
       "      <td>64.366455</td>\n",
       "      <td>78.493209</td>\n",
       "      <td>6209.0</td>\n",
       "      <td>4.368229</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8</td>\n",
       "      <td>Camden</td>\n",
       "      <td>507078</td>\n",
       "      <td>5.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>91.902830</td>\n",
       "      <td>78.059004</td>\n",
       "      <td>63.192429</td>\n",
       "      <td>77.718088</td>\n",
       "      <td>13073.0</td>\n",
       "      <td>9.197270</td>\n",
       "      <td>High (6.5-9.4%)</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>20</td>\n",
       "      <td>Cape May</td>\n",
       "      <td>92560</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>78.062050</td>\n",
       "      <td>65.185955</td>\n",
       "      <td>47.749335</td>\n",
       "      <td>2065.0</td>\n",
       "      <td>1.452793</td>\n",
       "      <td>Low (0.0-3.4%)</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Rank      County  Population  5 Stars  4 Stars  3 Stars  \\\n",
       "0    15    Atlantic      265429      0.0      3.0      0.0   \n",
       "1     1      Bergen      936692     36.0     58.0     24.0   \n",
       "2    11  Burlington      445384      2.0     13.0      6.0   \n",
       "3     8      Camden      507078      5.0     16.0     14.0   \n",
       "4    20    Cape May       92560      0.0      2.0      2.0   \n",
       "\n",
       "   Mean of Score (5*)  Mean of Score (4*)  Mean of Score (3*)  \\\n",
       "0            0.000000           78.796723            0.000000   \n",
       "1           92.108301           80.485967           66.481758   \n",
       "2           92.191000           78.922172           64.366455   \n",
       "3           91.902830           78.059004           63.192429   \n",
       "4            0.000000           78.062050           65.185955   \n",
       "\n",
       "   Average Mean Score  Yearly Crime  Yearly Crime(%)           Crime Rate  \\\n",
       "0           26.265574        6402.0         4.504010  Moderate (3.5-6.4%)   \n",
       "1           79.692009        9070.0         6.381033  Moderate (3.5-6.4%)   \n",
       "2           78.493209        6209.0         4.368229  Moderate (3.5-6.4%)   \n",
       "3           77.718088       13073.0         9.197270      High (6.5-9.4%)   \n",
       "4           47.749335        2065.0         1.452793       Low (0.0-3.4%)   \n",
       "\n",
       "   Average Price(3 bed)  \n",
       "0                   NaN  \n",
       "1         438778.938504  \n",
       "2                   NaN  \n",
       "3                   NaN  \n",
       "4                   NaN  "
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Merge 3 bedroom data with previously merged df\n",
    "school_crime_pop_resident=pd.merge(school_crime_pop,beds3_clean_df, on=\"County\", how=\"outer\")\n",
    "school_crime_pop_resident.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Rank</th>\n",
       "      <th>County</th>\n",
       "      <th>Population</th>\n",
       "      <th>5 Stars</th>\n",
       "      <th>4 Stars</th>\n",
       "      <th>3 Stars</th>\n",
       "      <th>Mean of Score (5*)</th>\n",
       "      <th>Mean of Score (4*)</th>\n",
       "      <th>Mean of Score (3*)</th>\n",
       "      <th>Average Mean Score</th>\n",
       "      <th>Yearly Crime</th>\n",
       "      <th>Yearly Crime(%)</th>\n",
       "      <th>Crime Rate</th>\n",
       "      <th>Average Price(3 bed)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>15</td>\n",
       "      <td>Atlantic</td>\n",
       "      <td>265429</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>78.796723</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>26.265574</td>\n",
       "      <td>6402.0</td>\n",
       "      <td>4.504010</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Bergen</td>\n",
       "      <td>936692</td>\n",
       "      <td>36.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>92.108301</td>\n",
       "      <td>80.485967</td>\n",
       "      <td>66.481758</td>\n",
       "      <td>79.692009</td>\n",
       "      <td>9070.0</td>\n",
       "      <td>6.381033</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "      <td>438778.938504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>11</td>\n",
       "      <td>Burlington</td>\n",
       "      <td>445384</td>\n",
       "      <td>2.0</td>\n",
       "      <td>13.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>92.191000</td>\n",
       "      <td>78.922172</td>\n",
       "      <td>64.366455</td>\n",
       "      <td>78.493209</td>\n",
       "      <td>6209.0</td>\n",
       "      <td>4.368229</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8</td>\n",
       "      <td>Camden</td>\n",
       "      <td>507078</td>\n",
       "      <td>5.0</td>\n",
       "      <td>16.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>91.902830</td>\n",
       "      <td>78.059004</td>\n",
       "      <td>63.192429</td>\n",
       "      <td>77.718088</td>\n",
       "      <td>13073.0</td>\n",
       "      <td>9.197270</td>\n",
       "      <td>High (6.5-9.4%)</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>20</td>\n",
       "      <td>Cape May</td>\n",
       "      <td>92560</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>78.062050</td>\n",
       "      <td>65.185955</td>\n",
       "      <td>47.749335</td>\n",
       "      <td>2065.0</td>\n",
       "      <td>1.452793</td>\n",
       "      <td>Low (0.0-3.4%)</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Rank      County  Population  5 Stars  4 Stars  3 Stars  \\\n",
       "0    15    Atlantic      265429      0.0      3.0      0.0   \n",
       "1     1      Bergen      936692     36.0     58.0     24.0   \n",
       "2    11  Burlington      445384      2.0     13.0      6.0   \n",
       "3     8      Camden      507078      5.0     16.0     14.0   \n",
       "4    20    Cape May       92560      0.0      2.0      2.0   \n",
       "\n",
       "   Mean of Score (5*)  Mean of Score (4*)  Mean of Score (3*)  \\\n",
       "0            0.000000           78.796723            0.000000   \n",
       "1           92.108301           80.485967           66.481758   \n",
       "2           92.191000           78.922172           64.366455   \n",
       "3           91.902830           78.059004           63.192429   \n",
       "4            0.000000           78.062050           65.185955   \n",
       "\n",
       "   Average Mean Score  Yearly Crime  Yearly Crime(%)           Crime Rate  \\\n",
       "0           26.265574        6402.0         4.504010  Moderate (3.5-6.4%)   \n",
       "1           79.692009        9070.0         6.381033  Moderate (3.5-6.4%)   \n",
       "2           78.493209        6209.0         4.368229  Moderate (3.5-6.4%)   \n",
       "3           77.718088       13073.0         9.197270      High (6.5-9.4%)   \n",
       "4           47.749335        2065.0         1.452793       Low (0.0-3.4%)   \n",
       "\n",
       "   Average Price(3 bed)  \n",
       "0              0.000000  \n",
       "1         438778.938504  \n",
       "2              0.000000  \n",
       "3              0.000000  \n",
       "4              0.000000  "
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Resident data is available for 11 counties, hence null replaced with 0\n",
    "school_crime_pop_resident[\"Average Price(3 bed)\"] = school_crime_pop_resident[\"Average Price(3 bed)\"].replace(np.nan,0)\n",
    "school_crime_pop_resident.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Rank</th>\n",
       "      <th>County</th>\n",
       "      <th>Population</th>\n",
       "      <th>5 Stars</th>\n",
       "      <th>4 Stars</th>\n",
       "      <th>3 Stars</th>\n",
       "      <th>Mean of Score (5*)</th>\n",
       "      <th>Mean of Score (4*)</th>\n",
       "      <th>Mean of Score (3*)</th>\n",
       "      <th>Average Mean Score</th>\n",
       "      <th>Yearly Crime</th>\n",
       "      <th>Yearly Crime(%)</th>\n",
       "      <th>Crime Rate</th>\n",
       "      <th>Percent Population</th>\n",
       "      <th>Average Price(3 bed)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Bergen</td>\n",
       "      <td>936692</td>\n",
       "      <td>36.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>92.108301</td>\n",
       "      <td>80.485967</td>\n",
       "      <td>66.481758</td>\n",
       "      <td>79.692009</td>\n",
       "      <td>9070.0</td>\n",
       "      <td>6.381033</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "      <td>10.695825</td>\n",
       "      <td>438778.938504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>3</td>\n",
       "      <td>Essex</td>\n",
       "      <td>799767</td>\n",
       "      <td>16.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>92.366122</td>\n",
       "      <td>80.555261</td>\n",
       "      <td>68.984594</td>\n",
       "      <td>80.635326</td>\n",
       "      <td>17603.0</td>\n",
       "      <td>12.384269</td>\n",
       "      <td>Very High (9.5-12.4%)</td>\n",
       "      <td>9.132316</td>\n",
       "      <td>440203.586124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>4</td>\n",
       "      <td>Hudson</td>\n",
       "      <td>676061</td>\n",
       "      <td>4.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>92.428713</td>\n",
       "      <td>80.238670</td>\n",
       "      <td>64.470844</td>\n",
       "      <td>79.046075</td>\n",
       "      <td>13241.0</td>\n",
       "      <td>9.315464</td>\n",
       "      <td>High (6.5-9.4%)</td>\n",
       "      <td>7.719752</td>\n",
       "      <td>452534.207865</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>5</td>\n",
       "      <td>Monmouth</td>\n",
       "      <td>621354</td>\n",
       "      <td>9.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>90.372806</td>\n",
       "      <td>79.944501</td>\n",
       "      <td>66.722680</td>\n",
       "      <td>79.013329</td>\n",
       "      <td>8156.0</td>\n",
       "      <td>5.738005</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "      <td>7.095068</td>\n",
       "      <td>374238.249840</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>10</td>\n",
       "      <td>Morris</td>\n",
       "      <td>494228</td>\n",
       "      <td>16.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>91.423962</td>\n",
       "      <td>79.385451</td>\n",
       "      <td>66.309983</td>\n",
       "      <td>79.039799</td>\n",
       "      <td>3405.0</td>\n",
       "      <td>2.395526</td>\n",
       "      <td>Low (0.0-3.4%)</td>\n",
       "      <td>5.643452</td>\n",
       "      <td>383466.091131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>6</td>\n",
       "      <td>Ocean</td>\n",
       "      <td>601651</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>78.377540</td>\n",
       "      <td>65.777706</td>\n",
       "      <td>48.051749</td>\n",
       "      <td>6370.0</td>\n",
       "      <td>4.481497</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "      <td>6.870085</td>\n",
       "      <td>275435.588598</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>9</td>\n",
       "      <td>Passaic</td>\n",
       "      <td>503310</td>\n",
       "      <td>2.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>94.852240</td>\n",
       "      <td>76.221174</td>\n",
       "      <td>65.424811</td>\n",
       "      <td>78.832742</td>\n",
       "      <td>10344.0</td>\n",
       "      <td>7.277332</td>\n",
       "      <td>High (6.5-9.4%)</td>\n",
       "      <td>5.747157</td>\n",
       "      <td>328642.158508</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>13</td>\n",
       "      <td>Somerset</td>\n",
       "      <td>331164</td>\n",
       "      <td>11.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>91.225956</td>\n",
       "      <td>81.293444</td>\n",
       "      <td>69.009048</td>\n",
       "      <td>80.509483</td>\n",
       "      <td>3213.0</td>\n",
       "      <td>2.260447</td>\n",
       "      <td>Low (0.0-3.4%)</td>\n",
       "      <td>3.781469</td>\n",
       "      <td>340228.129082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>17</td>\n",
       "      <td>Sussex</td>\n",
       "      <td>140799</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>75.982500</td>\n",
       "      <td>65.644057</td>\n",
       "      <td>47.208852</td>\n",
       "      <td>697.0</td>\n",
       "      <td>0.490362</td>\n",
       "      <td>Low (0.0-3.4%)</td>\n",
       "      <td>1.607745</td>\n",
       "      <td>218763.166443</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>7</td>\n",
       "      <td>Union</td>\n",
       "      <td>558067</td>\n",
       "      <td>16.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>91.485549</td>\n",
       "      <td>80.460416</td>\n",
       "      <td>66.025710</td>\n",
       "      <td>79.323892</td>\n",
       "      <td>11044.0</td>\n",
       "      <td>7.769804</td>\n",
       "      <td>High (6.5-9.4%)</td>\n",
       "      <td>6.372412</td>\n",
       "      <td>346384.616195</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>19</td>\n",
       "      <td>Warren</td>\n",
       "      <td>105779</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>80.583405</td>\n",
       "      <td>65.879694</td>\n",
       "      <td>48.821033</td>\n",
       "      <td>350.0</td>\n",
       "      <td>0.246236</td>\n",
       "      <td>Low (0.0-3.4%)</td>\n",
       "      <td>1.207861</td>\n",
       "      <td>173552.521226</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Rank    County  Population  5 Stars  4 Stars  3 Stars  Mean of Score (5*)  \\\n",
       "1      1    Bergen      936692     36.0     58.0     24.0           92.108301   \n",
       "5      3     Essex      799767     16.0     26.0     11.0           92.366122   \n",
       "7      4    Hudson      676061      4.0      6.0      8.0           92.428713   \n",
       "11     5  Monmouth      621354      9.0     28.0     20.0           90.372806   \n",
       "12    10    Morris      494228     16.0     31.0     18.0           91.423962   \n",
       "13     6     Ocean      601651      0.0      4.0     11.0            0.000000   \n",
       "14     9   Passaic      503310      2.0      8.0     14.0           94.852240   \n",
       "16    13  Somerset      331164     11.0     12.0      4.0           91.225956   \n",
       "17    17    Sussex      140799      0.0      4.0      6.0            0.000000   \n",
       "18     7     Union      558067     16.0     17.0      3.0           91.485549   \n",
       "19    19    Warren      105779      0.0      2.0      7.0            0.000000   \n",
       "\n",
       "    Mean of Score (4*)  Mean of Score (3*)  Average Mean Score  Yearly Crime  \\\n",
       "1            80.485967           66.481758           79.692009        9070.0   \n",
       "5            80.555261           68.984594           80.635326       17603.0   \n",
       "7            80.238670           64.470844           79.046075       13241.0   \n",
       "11           79.944501           66.722680           79.013329        8156.0   \n",
       "12           79.385451           66.309983           79.039799        3405.0   \n",
       "13           78.377540           65.777706           48.051749        6370.0   \n",
       "14           76.221174           65.424811           78.832742       10344.0   \n",
       "16           81.293444           69.009048           80.509483        3213.0   \n",
       "17           75.982500           65.644057           47.208852         697.0   \n",
       "18           80.460416           66.025710           79.323892       11044.0   \n",
       "19           80.583405           65.879694           48.821033         350.0   \n",
       "\n",
       "    Yearly Crime(%)             Crime Rate  Percent Population  \\\n",
       "1          6.381033    Moderate (3.5-6.4%)           10.695825   \n",
       "5         12.384269  Very High (9.5-12.4%)            9.132316   \n",
       "7          9.315464        High (6.5-9.4%)            7.719752   \n",
       "11         5.738005    Moderate (3.5-6.4%)            7.095068   \n",
       "12         2.395526         Low (0.0-3.4%)            5.643452   \n",
       "13         4.481497    Moderate (3.5-6.4%)            6.870085   \n",
       "14         7.277332        High (6.5-9.4%)            5.747157   \n",
       "16         2.260447         Low (0.0-3.4%)            3.781469   \n",
       "17         0.490362         Low (0.0-3.4%)            1.607745   \n",
       "18         7.769804        High (6.5-9.4%)            6.372412   \n",
       "19         0.246236         Low (0.0-3.4%)            1.207861   \n",
       "\n",
       "    Average Price(3 bed)  \n",
       "1          438778.938504  \n",
       "5          440203.586124  \n",
       "7          452534.207865  \n",
       "11         374238.249840  \n",
       "12         383466.091131  \n",
       "13         275435.588598  \n",
       "14         328642.158508  \n",
       "16         340228.129082  \n",
       "17         218763.166443  \n",
       "18         346384.616195  \n",
       "19         173552.521226  "
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Making a subset df with datapoints that have resident sales values\n",
    "subsetdf = master[master['County'].isin(['Bergen', 'Essex','Hudson','Monmouth', 'Morris','Ocean', 'Passaic','Somerset', 'Sussex','Union','Warren']) ]\n",
    "subsetdf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Plot to compare affect of crime rate on resident price per county\n",
    "subsetdf.pivot(index='County', columns='Crime Rate', values='Average Price(3 bed)').plot(kind='bar')\n",
    "plt.gca().legend(loc='center left', bbox_to_anchor=(1, 0.5))\n",
    "plt.xlabel(\"County\")\n",
    "plt.ylabel(\"Average Price (3 bedroom)\")\n",
    "plt.title(\"Crime Versus Average Resident Price\")\n",
    "\n",
    "#Save and display figure\n",
    "plt.tight_layout()\n",
    "plt.savefig(\"Output_files/Figures/Crime Versus Average Resident Price\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Plot to compare affect of school score on resident price per county\n",
    "subsetdf.pivot(index='County', columns='Average Mean Score', values='Average Price(3 bed)').plot(kind='bar')\n",
    "plt.gca().legend(loc='center left', bbox_to_anchor=(1, 0.5))\n",
    "plt.xlabel(\"County\")\n",
    "plt.ylabel(\"Average Price (3 bedroom)\")\n",
    "plt.title(\"Average School Score Versus Average Resident Price\")\n",
    "#plt.grid()\n",
    "\n",
    "#Save and display figure\n",
    "plt.tight_layout()\n",
    "plt.savefig(\"Output_files/Figures/Average School Score Versus Average Resident Price\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Rank</th>\n",
       "      <th>County</th>\n",
       "      <th>Population</th>\n",
       "      <th>5 Stars</th>\n",
       "      <th>4 Stars</th>\n",
       "      <th>3 Stars</th>\n",
       "      <th>Mean of Score (5*)</th>\n",
       "      <th>Mean of Score (4*)</th>\n",
       "      <th>Mean of Score (3*)</th>\n",
       "      <th>Average Mean Score</th>\n",
       "      <th>Yearly Crime</th>\n",
       "      <th>Yearly Crime(%)</th>\n",
       "      <th>Crime Rate</th>\n",
       "      <th>Percent Population</th>\n",
       "      <th>Average Price(3 bed)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Bergen</td>\n",
       "      <td>936692</td>\n",
       "      <td>36.0</td>\n",
       "      <td>58.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>92.108301</td>\n",
       "      <td>80.485967</td>\n",
       "      <td>66.481758</td>\n",
       "      <td>79.692009</td>\n",
       "      <td>9070.0</td>\n",
       "      <td>6.381033</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "      <td>10.695825</td>\n",
       "      <td>438778.938504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>5</td>\n",
       "      <td>Monmouth</td>\n",
       "      <td>621354</td>\n",
       "      <td>9.0</td>\n",
       "      <td>28.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>90.372806</td>\n",
       "      <td>79.944501</td>\n",
       "      <td>66.722680</td>\n",
       "      <td>79.013329</td>\n",
       "      <td>8156.0</td>\n",
       "      <td>5.738005</td>\n",
       "      <td>Moderate (3.5-6.4%)</td>\n",
       "      <td>7.095068</td>\n",
       "      <td>374238.249840</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>10</td>\n",
       "      <td>Morris</td>\n",
       "      <td>494228</td>\n",
       "      <td>16.0</td>\n",
       "      <td>31.0</td>\n",
       "      <td>18.0</td>\n",
       "      <td>91.423962</td>\n",
       "      <td>79.385451</td>\n",
       "      <td>66.309983</td>\n",
       "      <td>79.039799</td>\n",
       "      <td>3405.0</td>\n",
       "      <td>2.395526</td>\n",
       "      <td>Low (0.0-3.4%)</td>\n",
       "      <td>5.643452</td>\n",
       "      <td>383466.091131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>13</td>\n",
       "      <td>Somerset</td>\n",
       "      <td>331164</td>\n",
       "      <td>11.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>91.225956</td>\n",
       "      <td>81.293444</td>\n",
       "      <td>69.009048</td>\n",
       "      <td>80.509483</td>\n",
       "      <td>3213.0</td>\n",
       "      <td>2.260447</td>\n",
       "      <td>Low (0.0-3.4%)</td>\n",
       "      <td>3.781469</td>\n",
       "      <td>340228.129082</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Rank    County  Population  5 Stars  4 Stars  3 Stars  Mean of Score (5*)  \\\n",
       "1      1    Bergen      936692     36.0     58.0     24.0           92.108301   \n",
       "11     5  Monmouth      621354      9.0     28.0     20.0           90.372806   \n",
       "12    10    Morris      494228     16.0     31.0     18.0           91.423962   \n",
       "16    13  Somerset      331164     11.0     12.0      4.0           91.225956   \n",
       "\n",
       "    Mean of Score (4*)  Mean of Score (3*)  Average Mean Score  Yearly Crime  \\\n",
       "1            80.485967           66.481758           79.692009        9070.0   \n",
       "11           79.944501           66.722680           79.013329        8156.0   \n",
       "12           79.385451           66.309983           79.039799        3405.0   \n",
       "16           81.293444           69.009048           80.509483        3213.0   \n",
       "\n",
       "    Yearly Crime(%)           Crime Rate  Percent Population  \\\n",
       "1          6.381033  Moderate (3.5-6.4%)           10.695825   \n",
       "11         5.738005  Moderate (3.5-6.4%)            7.095068   \n",
       "12         2.395526       Low (0.0-3.4%)            5.643452   \n",
       "16         2.260447       Low (0.0-3.4%)            3.781469   \n",
       "\n",
       "    Average Price(3 bed)  \n",
       "1          438778.938504  \n",
       "11         374238.249840  \n",
       "12         383466.091131  \n",
       "16         340228.129082  "
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Selecting counties with low to moderate crime rate and better school score\n",
    "highscore_res=subsetdf.loc[school_crime_pop_resident['Average Mean Score']>65] \n",
    "lowcrime_highscore_res=highscore_res.loc[highscore_res['Crime Rate']<=\"Moderate (3.5-6.4%)\"]\n",
    "lowcrime_highscore_res.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Bar plot showing residential price in counties with low crime rate and high school score(for available counties)\n",
    "x_axis=np.arange(len(lowcrime_highscore_res[\"County\"]))\n",
    "y_axis=lowcrime_highscore_res[\"Average Price(3 bed)\"]\n",
    "tick_locations=x_axis\n",
    "plt.bar(x_axis, y_axis, color='r', alpha=0.5, align=\"edge\")\n",
    "plt.xticks(tick_locations, lowcrime_highscore_res[\"County\"], rotation=\"vertical\")\n",
    "plt.xlabel(\"County\")\n",
    "plt.ylabel(\"Average price of 3 bedrooms\")\n",
    "plt.title(\"Residntial Price In Best Counties of NJ\")\n",
    "\n",
    "#Save and display figure\n",
    "plt.tight_layout()\n",
    "plt.savefig(\"Output_files/Figures/Residntial_price_in_best_counties_of_NJ\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Rank</th>\n",
       "      <th>County</th>\n",
       "      <th>Population</th>\n",
       "      <th>5 Stars</th>\n",
       "      <th>4 Stars</th>\n",
       "      <th>3 Stars</th>\n",
       "      <th>Mean of Score (5*)</th>\n",
       "      <th>Mean of Score (4*)</th>\n",
       "      <th>Mean of Score (3*)</th>\n",
       "      <th>Average Mean Score</th>\n",
       "      <th>Yearly Crime</th>\n",
       "      <th>Yearly Crime(%)</th>\n",
       "      <th>Crime Rate</th>\n",
       "      <th>Percent Population</th>\n",
       "      <th>Average Price(3 bed)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>3</td>\n",
       "      <td>Essex</td>\n",
       "      <td>799767</td>\n",
       "      <td>16.0</td>\n",
       "      <td>26.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>92.366122</td>\n",
       "      <td>80.555261</td>\n",
       "      <td>68.984594</td>\n",
       "      <td>80.635326</td>\n",
       "      <td>17603.0</td>\n",
       "      <td>12.384269</td>\n",
       "      <td>Very High (9.5-12.4%)</td>\n",
       "      <td>9.132316</td>\n",
       "      <td>440203.586124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>4</td>\n",
       "      <td>Hudson</td>\n",
       "      <td>676061</td>\n",
       "      <td>4.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>92.428713</td>\n",
       "      <td>80.238670</td>\n",
       "      <td>64.470844</td>\n",
       "      <td>79.046075</td>\n",
       "      <td>13241.0</td>\n",
       "      <td>9.315464</td>\n",
       "      <td>High (6.5-9.4%)</td>\n",
       "      <td>7.719752</td>\n",
       "      <td>452534.207865</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>9</td>\n",
       "      <td>Passaic</td>\n",
       "      <td>503310</td>\n",
       "      <td>2.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>94.852240</td>\n",
       "      <td>76.221174</td>\n",
       "      <td>65.424811</td>\n",
       "      <td>78.832742</td>\n",
       "      <td>10344.0</td>\n",
       "      <td>7.277332</td>\n",
       "      <td>High (6.5-9.4%)</td>\n",
       "      <td>5.747157</td>\n",
       "      <td>328642.158508</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>7</td>\n",
       "      <td>Union</td>\n",
       "      <td>558067</td>\n",
       "      <td>16.0</td>\n",
       "      <td>17.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>91.485549</td>\n",
       "      <td>80.460416</td>\n",
       "      <td>66.025710</td>\n",
       "      <td>79.323892</td>\n",
       "      <td>11044.0</td>\n",
       "      <td>7.769804</td>\n",
       "      <td>High (6.5-9.4%)</td>\n",
       "      <td>6.372412</td>\n",
       "      <td>346384.616195</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Rank   County  Population  5 Stars  4 Stars  3 Stars  Mean of Score (5*)  \\\n",
       "5      3    Essex      799767     16.0     26.0     11.0           92.366122   \n",
       "7      4   Hudson      676061      4.0      6.0      8.0           92.428713   \n",
       "14     9  Passaic      503310      2.0      8.0     14.0           94.852240   \n",
       "18     7    Union      558067     16.0     17.0      3.0           91.485549   \n",
       "\n",
       "    Mean of Score (4*)  Mean of Score (3*)  Average Mean Score  Yearly Crime  \\\n",
       "5            80.555261           68.984594           80.635326       17603.0   \n",
       "7            80.238670           64.470844           79.046075       13241.0   \n",
       "14           76.221174           65.424811           78.832742       10344.0   \n",
       "18           80.460416           66.025710           79.323892       11044.0   \n",
       "\n",
       "    Yearly Crime(%)             Crime Rate  Percent Population  \\\n",
       "5         12.384269  Very High (9.5-12.4%)            9.132316   \n",
       "7          9.315464        High (6.5-9.4%)            7.719752   \n",
       "14         7.277332        High (6.5-9.4%)            5.747157   \n",
       "18         7.769804        High (6.5-9.4%)            6.372412   \n",
       "\n",
       "    Average Price(3 bed)  \n",
       "5          440203.586124  \n",
       "7          452534.207865  \n",
       "14         328642.158508  \n",
       "18         346384.616195  "
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lowscore_res=school_crime_pop_resident.loc[school_crime_pop_resident['Average Mean Score']<=65] \n",
    "highcrime_lowscore_res=highscore_res.loc[highscore_res['Crime Rate']>\"Moderate (3.5-6.4%)\"]\n",
    "highcrime_lowscore_res.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Bar plot showing residential price in counties with high crime rate and low school score (for available counties)\n",
    "x_axis=np.arange(len(highcrime_lowscore_res[\"County\"]))\n",
    "y_axis=highcrime_lowscore_res[\"Average Price(3 bed)\"]\n",
    "tick_locations=x_axis\n",
    "plt.bar(x_axis, y_axis, color='r', alpha=0.5, align=\"edge\")\n",
    "plt.xticks(tick_locations, highcrime_lowscore_res[\"County\"], rotation=\"vertical\")\n",
    "plt.xlabel(\"County\")\n",
    "plt.ylabel(\"Average price of 3 bedrooms\")\n",
    "plt.title(\"Residntial Price In Worst Counties of NJ\")\n",
    "\n",
    "#Save and display figure\n",
    "plt.tight_layout()\n",
    "plt.savefig(\"Output_files/Figures/Residntial_price_in_worst_counties_of_NJ\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The r-squared is: 0.7615316165777445\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Scatter plot of residential price versus crime rate\n",
    "y_values=subsetdf[\"Average Price(3 bed)\"]\n",
    "x_values=subsetdf[\"Yearly Crime(%)\"]\n",
    "\n",
    "#Generate regression line equation\n",
    "(slope, intercept, rvalue, pvalue, stderr) = linregress(x_values, y_values)\n",
    "regress_values = x_values * slope + intercept\n",
    "line_eq = \"y = \" + str(round(slope,2)) + \"x + \" + str(round(intercept,2))\n",
    "\n",
    "#Generate scatter plot\n",
    "plt.scatter(x_values,y_values, marker=\"o\", facecolors=\"steelblue\", edgecolors=\"black\")\n",
    "plt.plot(x_values,regress_values,\"r-\")\n",
    "plt.annotate(line_eq,(4,350000),fontsize=15,color=\"red\")\n",
    "plt.title(\"Residential rate versus Crime Rate\")\n",
    "plt.ylabel(\"Average price of 3 bedroom\")\n",
    "plt.xlabel(\"Yearly crime rate (%)\")\n",
    "\n",
    "#Display r-squared value \n",
    "print(f\"The r-squared is: {rvalue}\")\n",
    "\n",
    "#Save and display plot\n",
    "plt.tight_layout()\n",
    "plt.savefig(\"Output_files/Figures/Residential Rate vs Crime Rate\")\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
